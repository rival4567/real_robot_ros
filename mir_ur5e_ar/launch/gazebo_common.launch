<launch>

    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="model" default="$(find mir_ur5e_ar)/urdf/mir_ur5e.urdf"/>
    <arg name="extra_gazebo_args" default="--verbose"/>
    <arg name="tf_prefix" default="" doc="tf_prefix to be used by gazebo plugins and in the robot's urdf etc." />
    <arg name="prefix" value="$(arg tf_prefix)/" if="$(eval tf_prefix != '')" /> <!-- $(arg prefix) is used in all the config files! TODO: For multiple robots, create groups when loading the parameters to overwrite the arg? -->
    <arg name="prefix" value=""                  unless="$(eval tf_prefix != '')" />


    <group>
        <!-- Remapping joint states -->
        <remap from="joint_states"                   to="mir/joint_states" />
        <remap from="mobile_base_controller/cmd_vel" to="cmd_vel" />
        <remap from="mobile_base_controller/odom"    to="odom" />
        
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" value="$(find mir_ur5e_ar)/worlds/campus_enclosed.world"/>
            <arg name="debug" value="$(arg debug)" />
            <arg name="gui" value="$(arg gui)" />
            <arg name="paused" value="$(arg paused)"/>
            <arg name="use_sim_time" value="$(arg use_sim_time)"/>
            <arg name="headless" value="$(arg headless)"/>
            <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
        </include>
    </group>

    <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>
    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-x 0.0 -y 0.0 -z 0.0 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />


      <!-- Load ros_control controller configurations -->
    <rosparam file="$(find mir_description)/config/joint_state_controller.yaml" command="load" />
    <rosparam file="$(find mir_description)/config/diffdrive_controller.yaml" command="load" subst_value="true" />
    <rosparam file="$(find mir_ur5e_moveit)/config/ros_controllers.yaml" command="load"/>
    
    <!-- Start the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" output="screen"
        args="joint_state_controller mobile_base_controller manipulator_controller end_effector_controller"/>
    
    <!-- EKF -->
    <include file="$(find mir_gazebo)/launch/includes/ekf.launch.xml">
        <arg name="tf_prefix" value="$(arg prefix)" />
    </include>

    <!-- Add passive + mimic joints to joint_states topic -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <rosparam param="source_list">[mir/joint_states]</rosparam>
        <param name="rate" value="200.0" />
    </node>

    <!-- Robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" />

    <!-- create combined scan topic (like on real MiR) -->
    <node pkg="topic_tools" type="relay" name="b_scan_relay" args="b_scan scan"/>
    <node pkg="topic_tools" type="relay" name="f_scan_relay" args="f_scan scan"/>

    <node name="b_rep117_laser_filter" pkg="mir_driver" type="rep117_filter.py" output="screen">
        <remap from="scan" to="b_scan" />
        <remap from="scan_filtered" to="b_scan_rep117" />
    </node>

    <node name="f_rep117_laser_filter" pkg="mir_driver" type="rep117_filter.py" output="screen">
        <remap from="scan" to="f_scan" />
        <remap from="scan_filtered" to="f_scan_rep117" />
    </node>

    <!-- UR5e and gripper -->
    <!-- Launch Move group -->
    <include file="$(find mir_ur5e_moveit)/launch/move_group.launch"/>

</launch>